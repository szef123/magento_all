<?php/** * AHT_Aslideshow Extension * * @category    Local * @package     AHT_Aslideshow * @author      dungnv (dungnv@arrowhitech.com) * @copyright   Copyright(c) 2011 Arrowhitech Inc. (http://www.arrowhitech.com) * *//** * * @category   Local * @package    AHT_Aslideshow * @author     dungnv <dungnv@arrowhitech.com> */class AHT_Aslideshow_Block_Adminhtml_Slideshow_Edit_Tab_Productsgrid extends Mage_Adminhtml_Block_Widget_Grid{    public function __construct()    {        parent::__construct();        $this->setId('aslideshowProductsGrid');        $this->setDefaultSort('entity_id');        $this->setDefaultDir('desc');        $this->setTitle(Mage::helper('aslideshow')->__('Product Information'));        $this->setUseAjax(true);    }    protected function _addColumnFilterToCollection($column)    {        if ($column->getId() == 'in_products') {            $productIds = $this->_getSelectedProducts();            if (empty($productIds)) {                $productIds = 0;            }            if ($column->getFilter()->getValue()) {                $this->getCollection()->addFieldToFilter('entity_id', array('in'=>$productIds));            }            else {                if($productIds) {                    $this->getCollection()->addFieldToFilter('entity_id', array('nin'=>$productIds));                }            }        }        else {            parent::_addColumnFilterToCollection($column);        }        return $this;    }	protected function _getStore() {        $storeId = (int) $this->getRequest()->getParam('store', 0);        return Mage::app()->getStore($storeId);    }	    protected function _prepareCollection()    {        $store = $this->_getStore();        $collection = Mage::getModel('catalog/product')->getCollection()                        ->addAttributeToSelect('sku')                        ->addAttributeToSelect('name')                        ->addAttributeToSelect('attribute_set_id')                        ->addAttributeToSelect('type_id')                        ->joinField('qty',                                'cataloginventory/stock_item',                                'qty',                                'product_id=entity_id',                                '{{table}}.stock_id=1',                                'left');        if ($store->getId()) {            //$collection->setStoreId($store->getId());            $adminStore = Mage_Core_Model_App::ADMIN_STORE_ID;            $collection->addStoreFilter($store);            $collection->joinAttribute('name', 'catalog_product/name', 'entity_id', null, 'inner', $adminStore);            $collection->joinAttribute('custom_name', 'catalog_product/name', 'entity_id', null, 'inner', $store->getId());            $collection->joinAttribute('status', 'catalog_product/status', 'entity_id', null, 'inner', $store->getId());            $collection->joinAttribute('visibility', 'catalog_product/visibility', 'entity_id', null, 'inner', $store->getId());            $collection->joinAttribute('price', 'catalog_product/price', 'entity_id', null, 'left', $store->getId());        } else {            $collection->addAttributeToSelect('price');            $collection->joinAttribute('status', 'catalog_product/status', 'entity_id', null, 'inner');            $collection->joinAttribute('visibility', 'catalog_product/visibility', 'entity_id', null, 'inner');        }        $this->setCollection($collection);        parent::_prepareCollection();        $this->getCollection()->addWebsiteNamesToResult();        return $this;    }    protected function _prepareColumns() {        $this->addColumn('in_products', array(            'header_css_class' => 'a-center',            'type' => 'checkbox',            'values' => $this->_getSelectedProducts(),            'align' => 'center',            'index' => 'entity_id',			'renderer'	=> new AHT_Aslideshow_Block_Adminhtml_Renderer_Checkbox(),        ));        $this->addColumn('entity_id',                array(                    'header' => Mage::helper('aslideshow')->__('ID'),                    'width' => '40px',                    'type' => 'number',                    'index' => 'entity_id',        ));		        $this->addColumn('name',                array(                    'header' => Mage::helper('aslideshow')->__('Name'),                    'index' => 'name',        ));        $store = $this->_getStore();        if ($store->getId()) {            $this->addColumn('custom_name',                    array(                        'header' => Mage::helper('aslideshow')->__('Name in %s', $store->getName()),                        'index' => 'custom_name',            ));        }        $this->addColumn('type',                array(                    'header' => Mage::helper('aslideshow')->__('Type'),                    'width' => '60px',                    'index' => 'type_id',                    'type' => 'options',                    'options' => Mage::getSingleton('catalog/product_type')->getOptionArray(),        ));        $sets = Mage::getResourceModel('eav/entity_attribute_set_collection')                        ->setEntityTypeFilter(Mage::getModel('catalog/product')->getResource()->getTypeId())                        ->load()                        ->toOptionHash();        $this->addColumn('set_name',                array(                    'header' => Mage::helper('aslideshow')->__('Attrib. Set Name'),                    'width' => '100px',                    'index' => 'attribute_set_id',                    'type' => 'options',                    'options' => $sets,        ));        $this->addColumn('sku',                array(                    'header' => Mage::helper('aslideshow')->__('SKU'),                    'width' => '80px',                    'index' => 'sku',        ));//        $store = $this->_getStore();//        $this->addColumn('price',//            array(//                'header'=> Mage::helper('catalog')->__('Price'),//                'type'  => 'price',//                'currency_code' => $store->getBaseCurrency()->getCode(),//                'index' => 'price',//        ));        $this->addColumn('qty',                array(                    'header' => Mage::helper('aslideshow')->__('Qty'),                    'width' => '100px',                    'type' => 'number',                    'index' => 'qty',        ));        $this->addColumn('visibility',                array(                    'header' => Mage::helper('aslideshow')->__('Visibility'),                    'width' => '70px',                    'index' => 'visibility',                    'type' => 'options',                    'options' => Mage::getModel('catalog/product_visibility')->getOptionArray(),        ));        $this->addColumn('status',                array(                    'header' => Mage::helper('aslideshow')->__('Status'),                    'width' => '70px',                    'index' => 'status',                    'type' => 'options',                    'options' => Mage::getSingleton('catalog/product_status')->getOptionArray(),        ));        if (!Mage::app()->isSingleStoreMode()) {            $this->addColumn('websites',                    array(                        'header' => Mage::helper('aslideshow')->__('Websites'),                        'width' => '100px',                        'sortable' => false,                        'index' => 'websites',                        'type' => 'options',                        'options' => Mage::getModel('core/website')->getCollection()->toOptionHash(),            ));        }        $this->addColumn('position', array(            'header'            => Mage::helper('catalog')->__('Position'),            'name'              => 'position',            'type'              => 'number',            'validate_class'    => 'validate-number',            'index'             => 'position',            'width'             => 60,            'editable'          => false,//!$this->_getProduct()->getRelatedReadonly(),            'edit_only'         => false//!$this->_getProduct()->getId()        ));        return parent::_prepareColumns();    }    public function getGridUrl()    {        return $this->getUrl('*/*/products', array('id' => ''));    }    protected function _getSelectedProducts()    {        $products = $this->getRequest()->getPost('products', null);        $id     = $this->getRequest()->getParam('id');        $collection  = Mage::getModel('aslideshow/slideshow')->load($id);		if (!is_array($products)) {			$products = array();			if($collection->getProductIds()!='') {				$products = explode(',',$collection->getProductIds());			}		}        return $products;    }}